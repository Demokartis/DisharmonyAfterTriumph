on_actions = {
	# country 
	on_new_term_election = {
		random_events = {
			100 = election.2
			100 = election.3
			100 = election.4
			100 = election.5
			100 = election.6
			100 = election.11
			100 = election.12
			100 = election.13
			100 = election.14
			100 = election.15
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			100 = ace_promoted.1
			5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			100 = aces_killed_each_other.1
		}
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			100 = ace_killed_other_ace.1
		}
	}

	# our ace is killed by no name
	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			100 = ace_died.1
		}
	}
	
	# our ace died in accident
	# country, FROM = ace
	on_ace_killed_on_accident = {
	
	}
	
	# enemy ace is killed by our non name
	# country, FROM = enemy ace
	on_non_ace_killed_other_ace = {
	
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {

		random_events = {
			100 = war_justification.1
			100 = war_justification.2
			100 = war_justification.3
			100 = war_justification.4
			100 = war_justification.5
			100 = war_justification.6
			100 = war_justification.7
			100 = war_justification.8
			100 = war_justification.9
			100 = war_justification.10
			100 = war_justification.11
			100 = war_justification.12
			100 = war_justification.13
			100 = war_justification.14
			100 = war_justification.15
			100 = war_justification.16
			100 = war_justification.17
			100 = war_justification.18
			100 = war_justification.19
			17000 = 0
		}
	}

	on_wargoal_expire = {
		random_events = {
			100 = war_justification.301
		}
	}

	on_nuke_drop = {

		effect = {
			set_global_flag = first_nuke_dropped
			if = {
				limit = { NOT = { has_global_flag = first_nuke_dropped } }
				country_event = { id = generic.8 }
			}
			if = {
				limit = { has_idea = race_for_the_bomb_outclassed }
				remove_ideas = race_for_the_bomb_outclassed
			}
			if = {
				limit = { NOT = { has_country_flag = achievement_has_dropped_nuke } }
				goto_state = FROM
				set_country_flag = achievement_has_dropped_nuke
			}
			if = {
				limit = {
					FROM = { state = 378 }					
				}
				set_country_flag = achievement_has_nuked_california
			}
			if = {
				limit = {
					FROM = { is_core_of = AST }					
				}
				set_country_flag = achievement_AST_nuke_self
			}
			if = {
				limit = {
					tag = SWE
					FROM = {
						is_owned_by = DEN
						is_core_of = DEN
					}
				}
				set_country_flag = achievement_med_plutonium
			}
			if = {
				limit = {
					FROM = {
						is_core_of = JAP
					}
					has_global_flag = JAP_nuke_1
					NOT = {
						has_global_flag = JAP_nuke_2
					}
				}
				set_global_flag = JAP_nuke_2
			}
			if = {
				limit = {
					FROM = {
						is_core_of = JAP
					}
					NOT = {
						has_global_flag = JAP_nuke_1
					}
				}
				set_global_flag = JAP_nuke_1
			}
			
			news_event = { id = nuke_dropped.2 days = 1}
			news_event = { id = nuke_dropped.3 days = 1}
			news_event = { id = nuke_dropped.4 days = 1}
			news_event = { id = nuke_dropped.5 days = 1}
			news_event = { id = nuke_dropped.6 days = 1}
			news_event = { id = nuke_dropped.7 days = 1}
			news_event = { id = nuke_dropped.8 days = 1}
			news_event = { id = nuke_dropped.9 days = 1}
			news_event = { id = nuke_dropped.10 days = 1}
			news_event = { id = nuke_dropped.11 days = 1}
			news_event = { id = nuke_dropped.12 days = 1}
			news_event = { id = nuke_dropped.13 days = 1}
		}
		random_events = {
			100 = nuke_dropped.0
		}
	}

	# country random events
	#on_bi_yearly_pulse = {
	#
	#}

	#on_five_year_pulse = {
	#
	#}
	
	on_leave_faction = {
		effect = {
			FROM = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}
			
				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
		}
	}

	#FROM is the one that joins the faction
	on_create_faction = {
		effect = {
			# Sunset invasion check
			if = {
				limit = {
					FROM = { is_puppet = no }
					OR = {
						AND = {
							tag = MEX
							FROM = {
								capital_scope = {
									NOT = { is_on_continent = south_america }
								}
							}
						}
						AND = {
							FROM = {
								tag = MEX
							}
							capital_scope = {
								NOT = { is_on_continent = south_america }
							}
						}
					}
				}
				set_country_flag = achievement_failed_sunset_invasion
			}
		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			#Give achievement to nation joining a faction, but not in one from game start
			if = {
				limit = {
					date > 1936.01.02
				}
				FROM = {
					if = {
						limit = {
							is_faction_leader = no
						}
						set_country_flag = achievement_has_joined_faction
					}
				}
			}
	
			# Sunset invasion check
			if = {
				limit = {
					is_puppet = no
					OR = {
						AND = {
							tag = MEX
							FROM = {
								capital_scope = {
									NOT = { is_on_continent = south_america }
								}
							}
						}
						AND = {
							FROM = {
								tag = MEX
							}
							capital_scope = {
								NOT = { is_on_continent = south_america }
							}
						}
					}
				}
				set_country_flag = achievement_failed_sunset_invasion
			}			
		}
	}

	#FROM is faction leader on join faction requests. THIS DOES NOT FIRE ON ADD_TO_FACTION EFFECT! USE ON_OFFER_JOIN_FACTION!
	on_join_faction = {
		effect = {
			set_country_flag = achievement_has_joined_faction
			#Remove anti_soviet_pact if joining commie Soviet in faction
			if = {
				limit = {
					has_idea = anti_soviet_pact 
					FROM = {
						original_tag = SOV
						has_government = collective_vanguardist
					}
				}
				remove_ideas = anti_soviet_pact
			}

			# Sunset invasion check
			if = {
				limit = {
					is_puppet = no
					OR = {
						AND = {
							tag = MEX
							FROM = {
								capital_scope = {
									NOT = { is_on_continent = south_america }
								}
							}
						}
						AND = {
							FROM = {
								tag = MEX
							}
							capital_scope = {
								NOT = { is_on_continent = south_america }
							}
						}
					}
				}
				set_country_flag = achievement_failed_sunset_invasion
			}

			# Romania shouldn't declare war on Bulgaria on historical mode, if both are going to join the Axis
			if = {
				limit = {
					original_tag = BUL
					FROM = { original_tag = GER }
					is_historical_focus_on = yes
				}
				ROM = {
					add_ai_strategy = {
						type = befriend
						id = "BUL"
						value = 200
					}
				}
			}
		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
			news_event = { id = news.159 }
		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			if = {
				limit = {
					tag = SOV
					FIN = {
						has_war_with = SOV
						is_in_faction = no
						is_ai = no
						controls_state = 219
						any_war_score > 14
					}
					NOT = { has_global_flag = finnish_him_achievement_flag }
				}
				set_global_flag = finnish_him_achievement_flag
			}
			if = {
				limit = {
					tag = GER
					FROM = { 
						tag = SOV
					}
					NOT = { has_global_flag = fall_of_berlin_sov }
				}
				play_victory_parade_effect = yes
			}
			if = {
				limit = {
					NOT = { original_tag = GER }
					NOT = { has_government = national_chauvinist }
					has_civil_war = no
					NOT = {
						AND = {
							FROM = {
								original_tag = SPR
							}
							original_tag = SPR
						}
					}
				}
				news_event = { id = country_capitulated.0 days = 0 }
			}
			if = {
				limit = { tag = FRA }
				set_global_flag = FRA_already_surrendered
				set_variable = { global.FRA_capitulation_days = global.num_days }
			}
			if = {
				limit = {
					FROM = { tag = JAP }
					ROOT = { tag = CHI }
				}
			}
			
			if = {
				limit = { 
					original_tag = POL
					has_government = paternal_autocrat
				}
				retire_country_leader = yes
			}
			if = {
				limit = {
					original_tag = YUG
				}
			}
			if = {
				limit = {
					original_tag = DEN
				}
				country_event = { id = wtt_denmark.1 days = 1 }
			}
			if = {
				limit = {
					original_tag = FRA
					has_government = social_conservative
					NOT = { has_global_flag = achievement_france_surrender } #might as well use the achievement flag to check if france.10 fired
					is_subject = no
					is_in_faction_with = ENG
					has_war_with = GER
				}
				country_event = france.10
			}
		}
	}

	# ROOT is previously capitulated country
	on_uncapitulation = {
		effect = {
			if = {
				limit = {
					original_tag = FRA
					has_government = social_conservative
					is_puppet = no
				}
				drop_cosmetic_tag = yes
			}
		}
	}

	on_government_change = {
		effect = {			
			#Make sure Soviet can always create factions
			if = {
				limit = {
					original_tag = SOV
					NOT = { has_government = collective_vanguardist }
				}
				set_rule = { can_create_factions = yes }
			}
			if = {
				limit = { has_government = social_conservative }
				if = {
					limit = { has_idea = social_conservative_opposition_voicing_protests }
					remove_ideas = social_conservative_opposition_voicing_protests
				}
				if = {
					limit = { has_idea = social_conservative_revolutionaries }
					remove_ideas = social_conservative_revolutionaries
				}
				if = {
					limit = { has_idea = reign_of_terror }
					remove_ideas = reign_of_terror
				}
			}
			if = {
				limit = { has_government = collective_vanguardist }
				if = {
					limit = { TAG = SAF }
					set_cosmetic_tag = SAF_COM
				}
				if = {
					limit = { has_idea = communist_partisans_recruiting }
					remove_ideas = communist_partisans_recruiting
				}
				if = {
					limit = { has_idea = communist_revolutionaries }
					remove_ideas = communist_revolutionaries
				}
				if = {
					limit = { has_idea = collective_vanguardist_defeated }
					remove_ideas = collective_vanguardist_defeated
				}

				#Remove anti_soviet_pact
				if = {
				}
			}
			if = {
				limit = { has_government = national_chauvinist }
				if = {
					limit = { has_idea = fascist_assault_divisions }
					remove_ideas = fascist_assault_divisions
				}
				if = {
					limit = { has_idea = fascist_revolutionaries }
					remove_ideas = fascist_revolutionaries
				}
				if = {
					limit = { has_idea = national_chauvinist_defeated }
					remove_ideas = national_chauvinist_defeated
				}
				if = {
				}
			}
			#Replace the following two with events for SOV if they are not communist.
			#if = {
			#	limit = { 
			#		OR = {
			#			has_idea = trotskyite_plot 
			#			has_idea = trotskyite_plot_purged
			#		}
			#		NOT = {
			#			has_civil_war = yes
			#		}
			#	}
			#	country_event = { id = soviet.54 }
			#}
		}
	}

	on_coup_succeeded = {
		effect = {
			#Turn elections on for democracies created from coup
			random_other_country = {
				limit = {
					has_government = social_conservative
					original_tag = ROOT
				}
				set_politics = {
					ruling_party = social_conservative
					elections_allowed = yes
				}
			}
		}
	}

	on_unit_leader_level_up = {
		effect = {
			
		}
	}
	
	# From is owner country
	on_army_leader_daily = {
		effect = {
			if = {
				limit = {
					check_variable = { random < 0.02 }
					NOT = { has_trait = sick }
					set_temp_variable = { temp = sum_unit_terrain_modifier@sickness_chance }
					divide_temp_variable = { temp = num_units }
					check_variable = { temp > 0.75 }
					NOT = { has_unit_leader_flag = recently_sick }
				}
				add_timed_unit_leader_trait = {
					trait = sick
					days = 30
				}
				unit_leader_event = { id = generic.17 }
			}
		}
	}
	
	# From is owner country
	on_army_leader_won_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.001 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = generic.18 }
			}
		}
	}
	
	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.005 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = generic.18 }
			}
		}
	}
	
	on_army_leader_promoted = {
		effect = {
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}
	}
	
	# root country that invades
	# scope state that is invaded
	# from scope state that the invasion started
	# on_naval_invasion = {
	# 	effect = {
	# 	}
	# }
	
	
	# root country that paradrops
	# scope state that is paradroped into
	# from scope state that the paradrop started
	on_paradrop = {
	    effect = {
		    set_country_flag = has_paradropped_flag
		}
	}
	on_ruling_party_change = { 
		# temp var old_ideology_token is available for effects
		effect = {
			every_controlled_state = {
				limit = {
					has_resistance = yes
				}
				set_temp_variable = { new_compliance = compliance }
				multiply_temp_variable = { new_compliance = 0.5 }
				set_compliance = new_compliance
			}
		}
	}
}
